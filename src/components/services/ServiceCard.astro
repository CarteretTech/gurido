---
/**
 * ServiceCard.astro
 * Displays information about a service with animated hover effects
 */

interface Props {
  service: {
    id: string;
    name: string;
    shortDescription: string;
    icon: string;
    pricing: {
      basic: number;
    };
  };
  animationDelay?: number;
}

const { service, animationDelay = 0 } = Astro.props;
---

<div 
  class="service-card bg-card-bg rounded-lg shadow-md overflow-hidden transition-all duration-300 hover:shadow-lg hover:-translate-y-1 animate-on-scroll" 
  style={animationDelay ? `animation-delay: ${animationDelay}ms` : undefined}
>
  <a href={`/services/${service.id}`} class="block h-full group">
    <div class="p-6 flex flex-col h-full">
      <div class="flex items-center mb-4">
        <div class="w-12 h-12 flex items-center justify-center rounded-full bg-primary/10 text-primary">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            {service.icon === 'magnifying-glass' && (
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            )}
            {service.icon === 'key' && (
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z" />
            )}
            {service.icon === 'map-pin' && (
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
            )}
            {service.icon === 'chart-bar' && (
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
            )}
            {service.icon === 'code' && (
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
            )}
            {service.icon === 'document-text' && (
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            )}
          </svg>
        </div>
        <h3 class="text-xl font-bold ml-4 text-text-primary">{service.name}</h3>
      </div>
      
      <p class="text-text-secondary flex-grow mb-4">{service.shortDescription}</p>
      
      <div class="flex justify-between items-center">
        <span class="text-sm text-text-muted capitalize">${service.pricing.basic}+ /mo</span>
        <span class="text-primary font-medium flex items-center group-hover:translate-x-1 transition-transform">
          Learn more
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </span>
      </div>
    </div>
  </a>
</div>

<style>
  .service-card {
    position: relative;
    overflow: hidden;
    z-index: 1;
  }

  .service-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, var(--color-primary-dark) 0%, transparent 100%);
    opacity: 0;
    z-index: -1;
    transition: opacity 0.5s ease;
  }

  .service-card:hover::before {
    opacity: 0.03;
  }

  /* Enhanced hover animations */
  .service-card:hover .text-primary {
    transform: scale(1.05);
  }

  .text-primary {
    transition: transform 0.3s ease;
  }
</style>